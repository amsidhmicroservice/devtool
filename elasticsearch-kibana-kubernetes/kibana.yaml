---

# Repeat similar sections for es-node2 and es-node3 changing names accordingly

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  selector:
    app: es-node
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:6.8.23
          env:
            - name: SERVER_NAME
              value: "kibana"
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
            - name: ELASTICSEARCH_USERNAME
              value: "elastic"
            - name: ELASTICSEARCH_PASSWORD
              value: "changeme"
          ports:
            - containerPort: 5601
          volumeMounts:
            - name: kibana-certs
              mountPath: /usr/share/kibana/config/certificates
      # Add the following volume section
      volumes:
        - name: kibana-certs
          configMap:
            name: kibana-certs
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-certs
data:
  elastic-certificates.p12: |-
    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
    TGpfnbqWxH0gnexl34eL4+y5AgMBhqA=


---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-internal
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /c/Users/amsid/elasticsearch/multinode

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: internal
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-internal
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: internal
  resources:
    requests:
      storage: 1Gi
